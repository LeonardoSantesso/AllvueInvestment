@model List<Investment.Core.DTOs.SaleRecordDto>

@{
    ViewData["Title"] = "Sale Records";

    var totalSharesSold = Model.Sum(x => x.TotalSharesSold);
    var totalCost = Model.Sum(x => x.TotalCost);
    var totalSaleValue = Model.Sum(x => x.TotalSaleValue);
    var totalProfit = Model.Sum(x => x.TotalProfit);
    
    var averageCostBasis = totalSharesSold > 0
        ? Model.Sum(x => x.CostBasisPerSoldShare * x.TotalSharesSold) / totalSharesSold
        : 0;

    var profitClass = totalProfit < 0 ? "text-danger" : "text-success";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Sale Records</h2>
    <div class="table-responsive">
        <table class="table table-striped table-hover text-center">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Sale Date</th>
                    <th scope="col">Total Shares Sold</th>
                    <th scope="col">Cost Basis Per Sold Share</th>
                    <th scope="col">Total Cost (Purchase Price)</th>
                    <th scope="col">Total Sale Value (Selling Price)</th>
                    <th scope="col">Total Profit / Loss</th>
                    <th scope="col">Details</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var stock in Model)
                    {
                        <tr>
                            <td>@stock.SaleDate.ToString("MM/dd/yyyy")</td>
                            <td>@stock.TotalSharesSold</td>
                            <td>@stock.CostBasisPerSoldShare.ToString("C2")</td>
                            <td>@stock.TotalCost.ToString("C2")</td>
                            <td>@stock.TotalSaleValue.ToString("C2")</td>
                            <td class="font-weight-bold">
                                <span class="@(stock.TotalProfit < 0 ? "text-danger" : "text-success")">
                                    @(stock.TotalProfit < 0 ? "-" : "+") @(Math.Abs(stock.TotalProfit).ToString("C2"))
                                </span>
                            </td>
                            <td class="text-center">
                                <a href="javascript:void(0);" class="btn btn-primary" onclick="showModalSaleRecordDetails(@stock.Id)">
                                    <i class="fas fa-eye"></i> View
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted font-italic">No records available</td>
                    </tr>
                }
            </tbody>
            <tfoot>
            <tr class="font-weight-bold" style="background-color: #f8f9fa;font-weight: 600;">
                    <td class="text-right">Summary:</td>
                    <td>@totalSharesSold</td>
                    <td>@averageCostBasis.ToString("C2")</td>
                    <td>@totalCost.ToString("C2")</td>
                    <td>@totalSaleValue.ToString("C2")</td>
                    <td class="@profitClass">@((totalProfit < 0 ? "-" : "+") + Math.Abs(totalProfit).ToString("C2"))</td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<script type="text/javascript">
    // Show a modal of sale record details
    function showModalSaleRecordDetails(id) {

        function callBackModalSaleRecordDetails(data) { }

        var url = '@Url.Action("ModalSaleRecordDetails", "SaleRecords")' + "?id=" + id;
        CreateModal('modalSaleRecordDetails', url, 'modal-lg', { fnClose: callBackModalSaleRecordDetails });
    }
</script>
